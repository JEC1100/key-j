{"version":3,"sources":["helperFunctions/formatting/energy.js","helperFunctions/formatting/danceability.js","helperFunctions/formatting/key.js","helperFunctions/formatting/mood.js","helperFunctions/calculate_similarity.js","helperFunctions/calculate_key_similarity.js","components/SongInfo.js","components/Searchbar.js","components/SongsLikeThis.js","components/track_audio.js","components/CompareSongs.js","components/ArtistTopTracks.js","components/AlbumTracks.js","components/App.js","reportWebVitals.js","index.js"],"names":["module","exports","value","mode","a","b","smallestNumber","Math","min","largestNumber","max","similarity","round","convertToFifths","key","keyA","keyB","modeA","modeB","interval","abs","percent","SongInfo","props","useState","initialState","setInitialState","error","setError","params","useParams","useEffect","fetch","method","headers","Accept","body","JSON","stringify","songName","redirect","songTitle","then","res","ok","Error","json","jsonResponse","songs","catch","err","message","length","map","e","className","src","albumUrl","style","height","href","id","split","name","uuidv4","album","albumId","join","artistId","artist","songAId","trackName","Searchbar","songname","setSongname","history","useHistory","onSubmit","preventDefault","submit","push","type","onChange","event","target","placeholder","autoFocus","SongsLikeThis","state","setState","songid","song","console","log","response","tracks","i","images","url","formatEnergy","require","formatDanceability","formatKey","formatMood","TrackAudioFeatures","submitted","setSubmitted","setSongTitle","compareSongs","setCompareSongs","songId","audioFeatures","energy","danceability","tempo","role","valence","onClick","calculateSimilarity","calculateKeySimilarity","CompareSongs","songOneInfo","setSongOneInfo","songTwoInfo","setSongTwoInfo","energyBarLength","songInfo","danceabilityBarLength","tempoBarLength","keyBarLength","moodBarLength","songAalbumUrl","songAName","width","songBalbumUrl","songBName","ArtistTopTracks","artist_tracks","artistName","AlbumTracks","album_tracks","albumName","track_number","App","submitSongName","component","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.57846bf5.chunk.js","sourcesContent":["const formatEnergy = (value) => {\n  if (value < 0.3) {\n    return 'Low';\n  } else if (value < 0.6) {\n    return 'Medium';\n  } else if (value < 0.9) {\n    return 'High';\n  } else {\n    return 'VERY HIGH';\n  }\n};\n\nmodule.exports = formatEnergy;\n","const formatDanceability = (value) => {\n  if (value < 0.2) {\n    return 'Time for bed';\n  } else if (value < 0.4) {\n    return 'Chill';\n  } else if (value < 0.6) {\n    return 'In the middle';\n  } else if (value < 0.8) {\n    return 'Warming up';\n  } else {\n    return 'Boogy baby!!';\n  }\n};\n\nmodule.exports = formatDanceability;\n","const formatKey = (value, mode) => {\n  const musicalKey = {\n    0: 'C',\n    1: 'C#/Db',\n    2: 'D',\n    3: 'D#/Eb',\n    4: 'E',\n    5: 'F',\n    6: 'F#Gb',\n    7: 'G',\n    8: 'G#/Ab',\n    9: 'A',\n    10: 'A#/Bb',\n    11: 'B'\n  };\n\n  return musicalKey[value] + (mode ? ' maj' : ' min');\n};\n\nmodule.exports = formatKey;\n","const formatMood = (value) => {\n  if (value < 0.2) {\n    return \"😢\";\n  } else if (value < 0.4) {\n    return '🙁';\n  } else if (value < 0.6) {\n    return '😐';\n  } else if (value < 0.8) {\n    return '🙂';\n  } else {\n    return '😄';\n  }\n};\n\nmodule.exports = formatMood;\n","const calculateSimilarity = (a, b) => {\n  let smallestNumber = Math.min(a, b);\n  let largestNumber = Math.max(a, b);\n\n  let difference = ((largestNumber - smallestNumber) / largestNumber) * 100;\n  let similarity = 100 - difference;\n\n  return Math.round(similarity);\n};\n\nmodule.exports = calculateSimilarity;\n","const calculateKeySimilarity = (keyA, keyB, modeA, modeB) => {\n  const interval = Math.abs(convertToFifths(keyA, modeA) - convertToFifths(keyB, modeB));\n  const percent = (interval > 6 ? interval - 6 : 6 - interval);\n  return (Math.round(percent / 6 * 10000) / 100);\n};\n\nconst convertToFifths = (key, mode) => {\n  if(key % 2) { key = key < 6 ? key + 6 : key - 6 }\n  return !mode ? key - 3 : key;\n};\n\nmodule.exports = calculateKeySimilarity;\n","import React from 'react';\nimport { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useParams } from \"react-router-dom\"\n\nconst SongInfo = (props) => {\n  const [initialState, setInitialState] = useState([]);\n  const [error, setError] = useState(null);\n  const params = useParams()\n\n  const songName = () => {\n    if(props.redirect){\n      return params.songTitle\n    } else\n    return props.songTitle\n  }\n\n  useEffect(() => {\n    fetch('/api/', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        songName: songName(),\n      }),\n    })\n      .then((res) => {\n        if (!res.ok) {\n          throw Error('Could not fetch data.');\n        }\n        return res.json();\n      })\n      .then((jsonResponse) => setInitialState(jsonResponse.songs))\n      .catch((err) => {\n        setError(err.message);\n      });\n  }, [props.songTitle]);\n\n\n  if(props.redirect) {\n  return (\n    <div>\n      {error && <div>{error}</div>}\n      {initialState.length > 0 &&\n        initialState.map((e) => (\n          <div className='song-container' key={uuidv4()}>\n          <div className='song-image'>\n            <img src={e.albumUrl} style={{ height: 240 }}/>\n          </div>\n          <div className='song-section'>\n            <a href={'/track/' + e.id + '/' + e.albumUrl.split('/')[4] + '/' + e.name} key={uuidv4()}>\n              <div className='song-div'>\n                Song: <h2>{e.name}</h2>\n              </div>\n            </a>\n            <a href={['/album', e.album, e.albumId, e.albumUrl.split('/')[4]].join('/')} key={uuidv4()}>\n              <div className='song-div'>\n                Album: <h2>{e.album}</h2>\n              </div>\n            </a>\n            <a href={'/artist/' + e.artistId + '/' + e.artist} key={uuidv4()}>\n              <div className='song-div'>\n                Artist: <h2>{e.artist}</h2>\n              </div>\n            </a>\n          </div>\n          </div>\n        ))}\n    </div>\n  );\n  }\n  else {\n    return (\n    <div>     \n    {error && <div>{error}</div>}\n    {initialState.length > 0 &&\n      initialState.map((e) => (\n        <div className='song-container' key={uuidv4()}>\n        <div className='song-image'>\n          <img src={e.albumUrl} style={{ height: 240 }}/>\n        </div>\n        <div className='song-section'>\n          <a href={['/compare', props.songAId, params.albumUrl, params.trackName, e.id, e.albumUrl.split('/')[4], e.name].join('/')} key={uuidv4()}>\n          <div className='song-div'>\n            Song: <h2>{e.name}</h2>\n          </div>\n          </a>\n          <a href={['/album', e.album, e.albumId, e.albumUrl.split('/')[4]].join('/')} key={uuidv4()}>\n          <div className='song-div'>\n            Album: <h2>{e.album}</h2>\n          </div>\n          </a>\n          <a href={'/artist/' + e.artistId + '/' + e.artist} key={uuidv4()}>\n            <div className='song-div'>\n              Artist: <h2>{e.artist}</h2>\n            </div>\n          </a>\n        </div>\n        </div>\n      ))}\n    </div>\n    )\n  }\n};\n\nSongInfo.propTypes = {\n  props: PropTypes.func,\n  songTitle: PropTypes.string,\n  redirect: PropTypes.bool,\n  songAId: PropTypes.string,\n};\n\nexport default SongInfo;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\n\nconst Searchbar = (props) => {\n  const [songname, setSongname] = useState('');\n  let history = useHistory();\n\n  const handleChange = (event) => {\n    event.preventDefault();\n    setSongname(event.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.submit(songname);\n    if (props.redirect) {\n      history.push('/tracks/' + songname);\n    }\n  };\n\n  return (\n    <form className=\"search-bar\" onSubmit={handleSubmit} data-testid=\"form\" >\n      <input\n        className=\"text-field\"\n        type=\"text\"\n        data-testid=\"songname\"\n        value={songname}\n        onChange={handleChange}\n        id=\"songname\"\n        placeholder={props.placeholder}\n        autoFocus\n      />\n      <input className=\"submit\" type=\"submit\" value=\"Submit\" />\n    </form>\n  );\n};\n\nSearchbar.propTypes = {\n  props: PropTypes.func,\n  submit: PropTypes.func,\n  redirect: PropTypes.bool,\n  placeholder: PropTypes.string,\n};\nexport default Searchbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const SongsLikeThis = (props) => {\n  const [state, setState] = useState([]);\n  const params = useParams()\n\n  let song = props.song;\n  let songid = song[0].id;\n\n  useEffect(() => {\n    fetch('/api/songs_like_this', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        song: props.song,\n      }),\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          console.log(res);\n        }\n      })\n      .then((response) => setState(response.songs.tracks));\n  }, []);\n\n  return (\n    <div>\n      {state.length > 0 &&\n        state.map((e, i) => (\n          <div className=\"song-container\" key={i}>\n          <div className='song-image'>\n            <img src={e.album.images[0].url} style={{ height: 240 }}/>\n          </div>\n          <div className='song-section'>\n            <a href= {['/compare', songid, params.albumUrl, params.trackName, e.id, e.album.images[0].url.split('/')[4], e.name].join('/')} key={uuidv4()}>\n          <div className='song-div'>\n            Song: <h2>{e.name}</h2>\n          </div>\n          </a>\n          <a href={['/album', e.album.name, e.album.id, e.album.images[0].url.split('/')[4]].join('/')} key={uuidv4()}>\n            <div className='song-div'>\n              Album: <h2>{e.album.name}</h2>\n            </div>\n          </a>\n        </div>\n        </div>\n    ))}\n    </div>\n  );\n};\n\nSongsLikeThis.propTypes = {\n  props: PropTypes.func,\n  song: PropTypes.array,\n};\n\nexport default SongsLikeThis;\n","import React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Searchbar from './Searchbar';\nimport SongInfo from './SongInfo';\nimport SongsLikeThis from './SongsLikeThis';\n\n\nconst formatEnergy = require('../helperFunctions/formatting/energy');\nconst formatDanceability = require('../helperFunctions/formatting/danceability');\nconst formatKey = require('../helperFunctions/formatting/key');\nconst formatMood = require('../helperFunctions/formatting/mood');\n\n\nexport const TrackAudioFeatures = () => {\n  const [state, setState] = useState([]);\n  const [submitted, setSubmitted] = useState(false);\n  const [songTitle, setSongTitle] = useState('');\n  const [compareSongs, setCompareSongs] = useState(false);\n  const params = useParams();\n  \n  const submitSongName = (songname) => {\n    setSongTitle(songname);\n    setSubmitted(true);\n    setCompareSongs(false);\n  };\n\n  const seeSimilarSongs = () => {\n    setCompareSongs(true);\n    setSubmitted(false);\n  };\n\n  const searchbarMessage = 'Enter another song to compare track info';\n\n  useEffect(() => {\n    fetch('/api/track_audio', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        songId: params.id,\n      }),\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          console.log(res);\n        }\n      })\n      .then((response) => setState(response.audioFeatures));\n  }, []);\n  return(\n  <div>\n    <div className='song-container'>\n      <div className='song-image'>\n        <img src={\"https://i.scdn.co/image/\" + params.albumUrl} style={{ height: 240 }}/>\n      </div>\n      <div className='song-section'>\n        <h2>{params.trackName}</h2>\n        <h3> Song Statistics: </h3>\n        <p> ENERGY: {formatEnergy(state.energy)} <br></br>\n        DANCEABILITY: {formatDanceability(state.danceability)} <br></br>\n        TEMPO: {state.tempo} BPM <br></br>\n        KEY: {formatKey(state.key, state.mode)}<br></br>\n        MOOD: <span role=\"img\" aria-label=\"mood-emoji\">{formatMood(state.valence)}</span>\n        </p>\n      </div>\n    </div>\n      <Searchbar\n        submit={submitSongName}\n        redirect={false}\n        placeholder={searchbarMessage}\n      />\n      <button className=\"similar-songs-button\" onClick={seeSimilarSongs}>\n        See Similar Songs\n      </button>\n      <div className='breaker'></div>\n      {compareSongs ? <SongsLikeThis song={[state]} /> : null}\n      {submitted ? (\n        <SongInfo songTitle={songTitle} redirect={false} songAId={params.id}/>\n      ) : null}\n    </div>\n\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nconst formatEnergy = require('../helperFunctions/formatting/energy');\nconst formatDanceability = require('../helperFunctions/formatting/danceability');\nconst formatKey = require('../helperFunctions/formatting/key');\nconst formatMood = require('../helperFunctions/formatting/mood');\nconst calculateSimilarity = require('../helperFunctions/calculate_similarity');\nconst calculateKeySimilarity = require('../helperFunctions/calculate_key_similarity');\n\nexport const CompareSongs = () => {\n  let params = useParams();\n  const [songOneInfo, setSongOneInfo] = useState({});\n  const [songTwoInfo, setSongTwoInfo] = useState({});\n\n  useEffect(() => {\n    fetch('/api/compare', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        songId: params,\n      }),\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          console.log(res);\n        }\n      })\n      .then((response) => {\n        console.log(response.songs[0], response.songs[1]);\n        setSongOneInfo(response.songs[0]);\n        setSongTwoInfo(response.songs[1]);\n        console.log('here', songOneInfo, songTwoInfo);\n      });\n  }, []);\n\n  const energyBarLength = (songInfo) => {\n    return songInfo.energy * 10;\n  };\n\n  const danceabilityBarLength = (songInfo) => {\n    return songInfo.danceability * 10;\n  };\n\n  const tempoBarLength = (songInfo) => {\n    return (songInfo.tempo * 10) / 250;\n  };\n\n  const keyBarLength = (songInfo) => {\n    return (songInfo.key * 10) / 12;\n  };\n\n  const moodBarLength = (songInfo) => {\n    return songInfo.valence * 10;\n  };\n\n  return (\n    <div className=\"song-compare-container\">\n      <div className=\"song-container\">\n        <div className=\"song-image\">\n          <img\n            src={'https://i.scdn.co/image/' + params.songAalbumUrl}\n            style={{ height: 200 }}\n          />\n        </div>\n        <div className=\"song-info\">\n          <h2>{params.songAName}</h2>\n          <h4>Song Statistics:</h4>\n          <p>\n            ENERGY: {formatEnergy(songOneInfo.energy)} <br></br>\n            DANCEABILITY: {formatDanceability(songOneInfo.danceability)}\n            <br></br>\n            TEMPO: {songOneInfo.tempo} BPM <br></br>\n            KEY: {formatKey(songOneInfo.key)}\n            <br></br>\n            MOOD {formatMood(songOneInfo.valence)}\n          </p>\n        </div>\n      </div>\n      <div className=\"song-compare-div\">\n        <h2>Comparison</h2>\n        Energy\n        <div className=\"chart-row\">\n          <div className=\"chart-bar-box left\">\n            <div\n              className=\"chart-bar\"\n              style={{ width: `${energyBarLength(songOneInfo)}vw` }}\n            ></div>\n          </div>\n          <p>{calculateSimilarity(songOneInfo.energy, songTwoInfo.energy)}%</p>\n          <div className=\"chart-bar-box right\">\n            <div\n              className=\"chart-bar\"\n              style={{ width: `${energyBarLength(songTwoInfo)}vw` }}\n            ></div>\n          </div>\n        </div>\n        Danceability\n        <div className=\"chart-row\">\n          <div className=\"chart-bar-box left\">\n            <div\n              className=\"chart-bar\"\n              style={{ width: `${danceabilityBarLength(songOneInfo)}vw` }}\n            ></div>\n          </div>\n          <p>\n            {calculateSimilarity(\n              songOneInfo.danceability,\n              songTwoInfo.danceability\n            )}\n            %\n          </p>\n          <div className=\"chart-bar-box right\">\n            <div\n              className=\"chart-bar\"\n              style={{ width: `${danceabilityBarLength(songTwoInfo)}vw` }}\n            ></div>\n          </div>\n        </div>\n        Tempo\n        <div className=\"chart-row\">\n          <div className=\"chart-bar-box left\">\n            <div\n              className=\"chart-bar\"\n              style={{ width: `${tempoBarLength(songOneInfo)}vw` }}\n            ></div>\n          </div>\n          <p>{calculateSimilarity(songOneInfo.tempo, songTwoInfo.tempo)}%</p>\n          <div className=\"chart-bar-box right\">\n            <div\n              className=\"chart-bar\"\n              style={{ width: `${tempoBarLength(songTwoInfo)}vw` }}\n            ></div>\n          </div>\n        </div>\n        Key\n        <div className=\"chart-row\">\n          <div className=\"chart-bar-box left\">\n            <div\n              className=\"chart-bar\"\n              style={{ width: `${keyBarLength(songOneInfo)}vw` }}\n            ></div>\n          </div>\n          <p>\n            {Math.round(\n              calculateKeySimilarity(\n                songOneInfo.key,\n                songTwoInfo.key,\n                songOneInfo.mode,\n                songTwoInfo.mode\n              )\n            )}\n            %\n          </p>\n          <div className=\"chart-bar-box right\">\n            <div\n              className=\"chart-bar\"\n              style={{ width: `${keyBarLength(songTwoInfo)}vw` }}\n            ></div>\n          </div>\n        </div>\n        Mood\n        <div className=\"chart-row\">\n          <div className=\"chart-bar-box left\">\n            <div\n              className=\"chart-bar\"\n              style={{ width: `${moodBarLength(songOneInfo)}vw` }}\n            ></div>\n          </div>\n          <p>\n            {calculateSimilarity(songOneInfo.valence, songTwoInfo.valence)}%\n          </p>\n          <div className=\"chart-bar-box right\">\n            <div\n              className=\"chart-bar\"\n              style={{ width: `${moodBarLength(songTwoInfo)}vw` }}\n            ></div>\n          </div>\n        </div>\n      </div>\n      <div className=\"song-container\">\n        <div className=\"song-image\">\n          <img\n            src={'https://i.scdn.co/image/' + params.songBalbumUrl}\n            style={{ height: 180 }}\n          />\n        </div>\n        <div className=\"song-info\">\n          <h2>{params.songBName}</h2>\n          <h4>Song Statistics</h4>\n          <p>\n            ENERGY: {formatEnergy(songTwoInfo.energy)} <br></br>\n            DANCEABILITY: {formatDanceability(songTwoInfo.danceability)}\n            <br></br>\n            TEMPO: {songTwoInfo.tempo} BPM <br></br>\n            KEY: {formatKey(songTwoInfo.key)}\n            <br></br>\n            MOOD {formatMood(songTwoInfo.valence)}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport {useEffect, useState} from 'react';\nimport { useParams } from \"react-router-dom\"\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const ArtistTopTracks = () => {\n  \n  const [state, setState] = useState([]);\n  const params = useParams()\n\n  useEffect(() => {\n    fetch('/api/artist_top_tracks', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        artistId: params.artistId\n      })\n    }).then(res => {\n      if(res.ok){\n        return res.json()\n      } else {\n        console.log(res)\n      }\n    }).then(response => setState(response.artist_tracks))\n  },[])\n\n  return (\n    <div>\n      <div className='song-container'>\n      <h2>Top 10 songs by {params.artistName}</h2>\n      </div>\n      {state.length > 0 &&\n        state.map((e) => (\n          <div className='song-container' key={uuidv4()}>\n            <div className='song-image'>\n              <img src={e.albumUrl} style={{ height: 240 }}/>\n            </div>\n            <div className='song-section'>\n            <a href={'/track/' + e.id + '/' + e.albumUrl.split('/')[4] + '/' + e.name} key={uuidv4()}>\n              <div className='song-div'>\n                Song: <h2>{e.name}</h2>\n              </div>\n              </a>\n              <a href={['/album', e.album, e.albumId, e.albumUrl.split('/')[4]].join('/')} key={uuidv4()}>\n                <div className='song-div'>\n                  Album: <h2>{e.album}</h2>\n                </div>\n              </a>\n            </div>\n          </div>\n        ))}\n    </div>\n  );\n}\n\n  export default ArtistTopTracks;\n","import React from 'react';\nimport {useEffect, useState} from 'react';\nimport { useParams } from \"react-router-dom\"\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const AlbumTracks = () => {\n  \n  const [state, setState] = useState([]);\n  const params = useParams()\n\n  useEffect(() => {\n    fetch('/api/get_album_tracks', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        albumId: params.albumId\n      })\n    }).then(res => {\n      if(res.ok){\n        return res.json()\n      } else {\n        console.log(res)\n      }\n    }).then(response => setState(response.album_tracks))\n  },[])\n\n  return (\n    <div>\n    <div className='breaker'></div>\n    <h1>\n      <img src={\"https://i.scdn.co/image/\" + params.albumUrl} style={{ height: 200 }}/>\n      {params.albumName}\n    </h1>\n      {state.length > 0 &&\n        state.map((e) => (\n          <div className='song-container' key={uuidv4()}>\n          <div className='song-section'>\n            <a href= {'/track/' + e.id + '/' + params.albumUrl + '/' + e.name} key={uuidv4()}>\n            <div className='song-div'>\n              Song: <h2>{e.track_number}.  {e.name}</h2>\n            </div>\n            </a>\n          </div>\n          </div>\n        ))}\n    </div>\n  );\n}\n\n  export default AlbumTracks;\n","import { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport React, { useState } from 'react';\nimport SongInfo from './SongInfo';\nimport Searchbar from './Searchbar';\nimport { TrackAudioFeatures } from './track_audio';\nimport { CompareSongs} from './CompareSongs';\nimport { ArtistTopTracks } from './ArtistTopTracks';\nimport { AlbumTracks } from './AlbumTracks';\n\nconst App = () => {\n  const [songTitle, setSongTitle] = useState('');\n\n  const submitSongName = (songname) => {\n    setSongTitle(songname);\n  };\n\n  const searchbarMessage = 'Enter a song to find its key characteristics';\n\n  return (\n    \n    <div className=\"background\">\n\n      <div className=\"app\">\n        <header>\n          <div className=\"logo\">\n            <a href=\"/\">\n              <h1>| KEY-J |</h1>\n            </a>\n          </div>\n        </header>\n          <main>\n          <BrowserRouter>\n            <Switch>\n            <Route\n                component={() => <Searchbar submit={submitSongName} placeholder={searchbarMessage} redirect={true} />}\n                path=\"/\"\n                exact\n              />\n              <Route\n                component={() => <SongInfo songTitle={songTitle} redirect={true} />}\n                path={\"/tracks/:songTitle\"}\n                exact\n              />\n              <Route component={TrackAudioFeatures} path=\"/track/:id/:albumUrl/:trackName\" exact />\n              <Route \n                component={CompareSongs} \n                path=\"/compare/:songAid/:songAalbumUrl/:songAName/:songBid/:songBalbumUrl/:songBName\" exact />\n              <Route component={ArtistTopTracks} path=\"/artist/:artistId/:artistName\" exact />\n              <Route component={AlbumTracks} path=\"/album/:albumName/:albumId/:albumUrl\" exact />\n            </Switch>\n          </BrowserRouter>\n          </main>\n        </div>\n      </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}